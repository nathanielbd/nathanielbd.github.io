<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computational number theory on nathanielbd</title>
    <link>https://nathanielbd.github.io/tags/computational-number-theory/</link>
    <description>Recent content in computational number theory on nathanielbd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 30 Mar 2022 16:04:16 -0500</lastBuildDate>
    
	<atom:link href="https://nathanielbd.github.io/tags/computational-number-theory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning Python Exceptions through Lenstra&#39;s Algorithm</title>
      <link>https://nathanielbd.github.io/posts/python-exceptions-thru-lenstras-algo/</link>
      <pubDate>Wed, 30 Mar 2022 16:04:16 -0500</pubDate>
      
      <guid>https://nathanielbd.github.io/posts/python-exceptions-thru-lenstras-algo/</guid>
      <description>This is part two of my series on Lenstra&amp;rsquo;s Algorithm. See part one here for the intuition for the algorithm.
 In part one, we saw that Lenstra&amp;rsquo;s Algorithm can intuitively be understood as an algorithm literally built to fail. We repeatedly add a point to itself on an elliptic curve modulo the number to be factored and wait until a failure to compute a modular multiplicative inverse occurs. Because when that happens, it means that the GCD of the number to be factored and another number is non-zero.</description>
    </item>
    
    <item>
      <title>The Algorithm Built to Fail</title>
      <link>https://nathanielbd.github.io/posts/algorithm-built-to-fail/</link>
      <pubDate>Sun, 22 Aug 2021 17:33:48 -0600</pubDate>
      
      <guid>https://nathanielbd.github.io/posts/algorithm-built-to-fail/</guid>
      <description>This is my entry for 3blue1brown&amp;rsquo;s first summer of math exposition (SoME1). I&amp;rsquo;m glad to report it was one of the top 100/1200+ entries and that Grant Sanderson ranked it as one of his favorite written entries!
 There&amp;rsquo;s no question that elliptic curves are incredibly important to math and cryptography.
        Elliptic curve cryptography spotted in Wikipedia&amp;rsquo;s security certificate    It was the key to Andrew Wiles&amp;rsquo;s famous proof of Fermat&amp;rsquo;s Last Theorem.</description>
    </item>
    
  </channel>
</rss>